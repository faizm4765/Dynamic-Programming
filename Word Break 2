###https://leetcode.com/problems/word-break/

Given a non-empty string s and a dictionary wordDict containing a list of non-empty words,
determine if s can be segmented into a space-separated sequence of one or more dictionary words.

Note:

The same word in the dictionary may be reused multiple times in the segmentation.
You may assume the dictionary does not contain duplicate words.
Example 1:

Input: s = "leetcode", wordDict = ["leet", "code"]
Output: true
Explanation: Return true because "leetcode" can be segmented as "leet code".

Example 2:

Input: s = "cars", wordDict = ["car", "ca","rs"]
Output: true

Note : This is different from Word Break problem in this repo as that problem has basic testcases which can be solved using iteration only.
----------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------


class Solution {
public:
    map<string,int> mp;
    Solution(){
        mp.clear();    
    }
    
    bool wordBreak(string s, vector<string> wordDict) {
        if(s == "")
            return 1;
            
        for(int i=0;i < wordDict.size();i++){
            if(s.rfind(wordDict[i],0) == 0){
                
                string t = s.substr(wordDict[i].size());
                if(mp[t] == -1)
                    continue;
                if(wordBreak(t,wordDict))
                    return 1;
                mp[t] = -1;
            }
        }
        
        return 0;
    }
};
