class Solution {
public:
    bool isSubsequence(string s, string t) {
        
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        cout.tie(NULL);
        
        int m = s.length(),n = t.length();
        int dp[m+1][n+1],i,j;
        for(i=0;i<n+1;i++)
            dp[0][i] = 0;
        for(i=0;i<m+1;i++)
            dp[i][0] = 0;
        
        for(i=1;i<=m;i++){
            for(j=1;j<=n;j++){
                if(s[i-1] == t[j-1])
                    dp[i][j] = dp[i-1][j-1] + 1;
                else
                    dp[i][j] = max(dp[i-1][j],dp[i][j-1]);
            }
        }
        return dp[m][n] == m;
    }
};
