https://leetcode.com/problems/maximal-square/

Given an m x n binary matrix filled with 0's and 1's, find the largest square containing only 1's and return its area.

Input: matrix = [["1","0","1","0","0"],["1","0","1","1","1"],["1","1","1","1","1"],["1","0","0","1","0"]]
Output: 4

------------------------------------------------------------------------------------------------------------------------

class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        int dp[301][301];
        int m = matrix.size(),n = matrix[0].size(),ans = 0;
        for(int i = 0;i < m;i++){
            for(int j = 0;j < n;j++){
                if(matrix[i][j] == '0')
                    dp[i][j] = 0;
                else{
                    if((i == m - 1) or (j == n - 1))
                        dp[i][j] = 1;
                    ans = 1;
                }
            }
            cout<<endl;
        }
        for(int i = m - 2;i >= 0;i--){
            for(int j = n - 2;j >= 0;j--){
                if(matrix[i][j] == '1'){
                    dp[i][j] = 1 + min(dp[i + 1][j],min(dp[i][j + 1],dp[i + 1][j + 1]));
                    ans = max(ans,dp[i][j]);
                }
            }
        }
        return ans * ans;
    }
};
