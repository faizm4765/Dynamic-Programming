#include<bits/stdc++.h>
using namespace std;


int solve(int a[],int i,int j,int** dp){
    
    if(i>=j)
        return (dp[i][j] = 0);

    if(dp[i][j] != -1)
        return dp[i][j];

    int res  = INT_MAX;
    
    for(int k=i; k<j;k++){
        res = min(res,solve(a,i,k,dp) + solve(a,k+1,j,dp) + a[i-1]*a[k]*a[j]);
        dp[i][j] = res;
    }
    return res;
}


int main(){
    
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;

        int a[n],i,res = INT_MAX;
        int m = -1;
        for(i=0;i<n;i++){
            cin>>a[i];
            if(a[i] > m)
                m = a[i];
        }
        
        int **dp;

        dp = new int*[m+1];
        for(int i=0;i<=m;i++){
            dp[i] = new int[m+1];
        }

        for(int i=0;i<=m;i++){
            for(int j=0;j<=m;j++){
                dp[i][j] = -1;
            }
        }

        int k  = solve(a,1,n-1,dp);

        cout<<k;
        cout<<"\n";

    }

    return 0;
}
